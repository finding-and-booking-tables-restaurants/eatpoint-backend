name: eatpoint_workflow

on:
  pull_request:
    branches:
      - main
      - '!review'
    
jobs:
  tests:
    name: Testing
    runs-on: ubuntu-latest
    steps:
    - name: Check out the repo
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.11
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Test with flake8 and django tests
      run: |
        python -m flake8 --ignore E501,W503
        # cd eatpoint/
        # python manage.py test
# сделать запуск тестов из файла tests. создать директорию для тестов
  build_and_push:
    name: Push Docker image to DockerHub
    runs-on: ubuntu-latest
    needs: tests
    steps:
    - name: Check out the repo
      uses: actions/checkout@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to Docker
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Push to DockerHub
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO_BACKEND }}:latest
        file: eatpoint/Dockerfile

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          stack_file_name: docker-compose.yaml
          script: |
            sudo docker compose stop
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO_BACKEND }}:latest
            sudo docker compose rm backend
            sudo docker compose up -d

  send_message:
    name: Send telegram message
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} выполнен!
