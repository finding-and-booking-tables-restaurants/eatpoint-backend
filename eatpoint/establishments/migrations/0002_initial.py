# Generated by Django 4.2.5 on 2023-11-15 13:25

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("establishments", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="review",
            name="author",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="review",
            name="establishment",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="review",
                to="establishments.establishment",
            ),
        ),
        migrations.AddField(
            model_name="imageestablishment",
            name="establishment",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="images",
                to="establishments.establishment",
            ),
        ),
        migrations.AddField(
            model_name="favorite",
            name="establishment",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="favorite",
                to="establishments.establishment",
            ),
        ),
        migrations.AddField(
            model_name="favorite",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="favorite",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="establishment",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="event",
                to="establishments.establishment",
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="type_event",
            field=models.ManyToManyField(
                blank=True,
                related_name="establishments",
                to="establishments.typeevents",
                verbose_name="Тип события",
            ),
        ),
        migrations.AddField(
            model_name="establishment",
            name="cities",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="establishments",
                to="establishments.city",
                verbose_name="Город",
            ),
        ),
        migrations.AddField(
            model_name="establishment",
            name="kitchens",
            field=models.ManyToManyField(
                related_name="establishments",
                to="establishments.kitchen",
                verbose_name="Кухня заведения",
            ),
        ),
        migrations.AddField(
            model_name="establishment",
            name="owner",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="establishment",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Владелец",
            ),
        ),
        migrations.AddField(
            model_name="establishment",
            name="services",
            field=models.ManyToManyField(
                related_name="establishments",
                to="establishments.service",
                verbose_name="Услуга заведения",
            ),
        ),
        migrations.AddField(
            model_name="establishment",
            name="types",
            field=models.ManyToManyField(
                related_name="establishments",
                to="establishments.typeest",
                verbose_name="Тип заведения",
            ),
        ),
        migrations.AddConstraint(
            model_name="workestablishment",
            constraint=models.UniqueConstraint(
                fields=("day", "establishment"),
                name="unique_work",
                violation_error_message="Можно добавить только 1 день недели",
            ),
        ),
        migrations.AddConstraint(
            model_name="review",
            constraint=models.UniqueConstraint(
                fields=("establishment", "author"), name="uniquereview"
            ),
        ),
        migrations.AddConstraint(
            model_name="favorite",
            constraint=models.UniqueConstraint(
                fields=("user", "establishment"), name="uniquefavorit"
            ),
        ),
    ]
