# Generated by Django 4.2.5 on 2023-12-21 10:58

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("establishments", "0008_delete_event_delete_typeevents"),
    ]

    operations = [
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=200, verbose_name="Название события"),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, max_length=5000, verbose_name="Описание события"
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        upload_to="establishment/images/event_posters/%Y-%m-%d",
                        verbose_name="Постер события",
                    ),
                ),
                ("date_start", models.DateTimeField(verbose_name="Начало события")),
                (
                    "date_end",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Окончание события"
                    ),
                ),
                (
                    "price",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="Цена события"
                    ),
                ),
                (
                    "establishment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="establishments.establishment",
                    ),
                ),
            ],
            options={
                "verbose_name": "Событие",
                "verbose_name_plural": "События",
                "default_related_name": "events",
            },
        ),
        migrations.CreateModel(
            name="TypeEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="Тип события")),
            ],
            options={
                "verbose_name": "Тип события",
                "verbose_name_plural": "Типы событий",
            },
        ),
        migrations.CreateModel(
            name="EventPhoto",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        upload_to="establishment/images/event_photos/%Y-%m-%d",
                        verbose_name="Файл фото",
                    ),
                ),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="photos",
                        to="events.event",
                        verbose_name="Событие",
                    ),
                ),
            ],
            options={
                "verbose_name": "Фотография события",
                "verbose_name_plural": "Фотографии событий",
            },
        ),
        migrations.AddField(
            model_name="event",
            name="type_event",
            field=models.ManyToManyField(
                blank=True, to="events.typeevent", verbose_name="Тип события"
            ),
        ),
    ]
